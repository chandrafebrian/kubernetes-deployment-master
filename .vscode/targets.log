make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Sun Jul 17 09:13:16 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `Makefile', line 5)
FE_DIR = ./frontend
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from `Makefile', line 9)
CHART_NAME = pintu-chart
# automatic
@D = $(patsubst %/,%,$(dir $@))
 
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/chandrafebrian/Downloads/helm-k8s-deployment-master
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from `Makefile', line 3)
USERNAME = move4up
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# makefile (from `Makefile', line 4)
APP = trivia
# environment
VSCODE_CWD = /
# environment
PATH = /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/chandrafebrian/flutter/bin
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `Makefile', line 10)
CHART_DIR = ./pintu-chart
# makefile (from `Makefile', line 8)
BACKEND_VERSION = 1.0.0
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.A9VZ3RILcU/Listeners
# automatic
%F = $(notdir $%)
# environment
PWD = /Users/chandrafebrian/Downloads/helm-k8s-deployment-master
# makefile (from `Makefile', line 7)
FRONTEND_VERSION = 1.0.0
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/chandrafebrian
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/chandrafebrian/Library/Application Support/Code/CachedData/b06ae3b2d2dbfe28bca3134cc6be65935cdfea6a
# environment
LOGNAME = chandrafebrian
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
ZSH = /Users/chandrafebrian/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# environment
USER = chandrafebrian
# makefile
.DEFAULT_GOAL := build
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/9v/9qv2fxrn4yn4rq8vjnnqljtw0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/chandrafebrian/Library/Application Support/Code/1.69.1-main.sock
# environment
MallocNanoZone = 0
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.7555100.7555106
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
PAGER = less
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 6)
BE_DIR = ./backend
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 2079
# variable set hash-table stats:
 
# Load=70/1024=7%, Rehash=0, Collisions=1/94=1%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777233, inode 7942531): 10 files, no impossibilities.

# 10 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: backend-build frontend-build build update update-be update-fe publish publish-fe publish-be build-publish build-deploy-production build-deploy-staging delpoy-staging deploy-production
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2020-08-14 07:17:24
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

update: update-fe update-be
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build: backend-build frontend-build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build-deploy-staging: build-publish deploy-staging
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

backend-build: update-be
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 19):
	docker build -t $(APP)-backend:latest $(BE_DIR)
	docker tag $(APP)-backend:latest $(USERNAME)/$(APP)-backend:$(BACKEND_VERSION)
	

update-be:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 31):
	cd $(BE_DIR) && npm install
	

deploy-staging:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 58):
	helm upgrade --install $(CHART_NAME) \
	--set trivia.frontend.image=$(USERNAME)/$(APP)-frontend \
	--set trivia.backend.image=$(USERNAME)/$(APP)-backend \
	--set trivia.backend.tag=$(BACKEND_VERSION) \
	--set trivia.frontend.tag=$(FRONTEND_VERSION) \
	$(CHART_DIR) 
	

delpoy-staging:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build-deploy-production:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build-delpoy-production: build-publish deploy-production
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

publish-fe:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 40):
	docker login
	docker push $(USERNAME)/$(APP)-frontend:$(FRONTEND_VERSION)
	

publish: publish-be publish-fe
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

deploy-production:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 49):
	helm upgrade --install $(CHART_NAME) \
	-f $(CHART_DIR)/production-values.yaml \
	--set trivia.frontend.image=$(USERNAME)/$(APP)-frontend \
	--set trivia.backend.image=$(USERNAME)/$(APP)-backend \
	--set trivia.frontend.tag=$(FRONTEND_VERSION) \
	--set trivia.backend.tag=$(BACKEND_VERSION) \
	$(CHART_DIR)
	

update-fe:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 29):
	cd $(FE_DIR) && npm install
	

publish-be:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 36):
	docker login
	docker push $(USERNAME)/$(APP)-backend:$(BACKEND_VERSION)
	

build-publish: build publish
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

frontend-build: update-fe
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 23):
	docker build -t $(APP)-frontend:latest $(FE_DIR)
	docker tag $(APP)-frontend:latest $(USERNAME)/$(APP)-frontend:$(FRONTEND_VERSION)
	

# files hash-table stats:
# Load=21/1024=2%, Rehash=0, Collisions=5/61=8%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Sun Jul 17 09:13:16 2022

 
